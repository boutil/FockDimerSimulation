//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33053471
// Cuda compilation tools, release 12.2, V12.2.128
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_52
.address_size 64

	// .globl	flipFaces

.visible .entry flipFaces(
	.param .u64 flipFaces_param_0,
	.param .u64 flipFaces_param_1,
	.param .u64 flipFaces_param_2,
	.param .u64 flipFaces_param_3,
	.param .u32 flipFaces_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd4, [flipFaces_param_0];
	ld.param.u64 	%rd5, [flipFaces_param_1];
	ld.param.u64 	%rd6, [flipFaces_param_2];
	ld.param.u64 	%rd7, [flipFaces_param_3];
	ld.param.u32 	%r3, [flipFaces_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	mul.lo.s32 	%r7, %r3, %r3;
	shl.b32 	%r8, %r7, 1;
	setp.ge.s32 	%p1, %r1, %r8;
	@%p1 bra 	$L__BB0_11;

	cvta.to.global.u64 	%rd8, %rd6;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u32 	%r9, [%rd10];
	setp.ne.s32 	%p2, %r9, 1;
	@%p2 bra 	$L__BB0_11;

	cvta.to.global.u64 	%rd11, %rd4;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd2, %rd11, %rd12;
	ld.global.u32 	%r2, [%rd2];
	setp.eq.s32 	%p3, %r2, 10;
	cvta.to.global.u64 	%rd13, %rd5;
	add.s64 	%rd3, %rd13, %rd12;
	@%p3 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_3;

$L__BB0_5:
	ld.global.f32 	%f7, [%rd3];
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	setp.ne.s32 	%p4, %r2, 5;
	mov.f32 	%f7, 0f00000000;
	@%p4 bra 	$L__BB0_6;

	ld.global.f32 	%f5, [%rd3];
	rcp.rn.f32 	%f7, %f5;

$L__BB0_6:
	cvta.to.global.u64 	%rd14, %rd7;
	add.s64 	%rd16, %rd14, %rd12;
	ld.global.f32 	%f6, [%rd16];
	cvt.f64.f32 	%fd1, %f6;
	cvt.f64.f32 	%fd2, %f7;
	mul.f64 	%fd3, %fd2, 0d3FEFAE147AE147AE;
	setp.leu.f64 	%p5, %fd3, %fd1;
	@%p5 bra 	$L__BB0_11;

	setp.eq.s32 	%p6, %r2, 5;
	@%p6 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_8;

$L__BB0_10:
	mov.u32 	%r11, 10;
	st.global.u32 	[%rd2], %r11;
	bra.uni 	$L__BB0_11;

$L__BB0_8:
	setp.ne.s32 	%p7, %r2, 10;
	@%p7 bra 	$L__BB0_11;

	mov.u32 	%r10, 5;
	st.global.u32 	[%rd2], %r10;

$L__BB0_11:
	ret;

}
	// .globl	consolidateFaces
.visible .entry consolidateFaces(
	.param .u64 consolidateFaces_param_0,
	.param .u64 consolidateFaces_param_1,
	.param .u32 consolidateFaces_param_2,
	.param .u32 consolidateFaces_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [consolidateFaces_param_0];
	ld.param.u64 	%rd2, [consolidateFaces_param_1];
	ld.param.u32 	%r6, [consolidateFaces_param_2];
	ld.param.u32 	%r7, [consolidateFaces_param_3];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r11, %r9, %r8, %r10;
	div.u32 	%r1, %r11, %r6;
	add.s32 	%r2, %r1, 1;
	mul.lo.s32 	%r12, %r1, %r6;
	sub.s32 	%r3, %r11, %r12;
	add.s32 	%r4, %r3, 1;
	shl.b32 	%r5, %r6, 1;
	add.s32 	%r13, %r5, -1;
	setp.ge.s32 	%p1, %r2, %r13;
	add.s32 	%r14, %r6, -1;
	setp.ge.s32 	%p2, %r4, %r14;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mad.lo.s32 	%r15, %r2, %r6, %r4;
	cvta.to.global.u64 	%rd4, %rd1;
	mad.lo.s32 	%r16, %r1, %r6, %r3;
	mul.wide.s32 	%rd5, %r16, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r17, [%rd6+4];
	and.b32  	%r18, %r17, 4;
	add.s32 	%r19, %r16, %r5;
	mul.wide.s32 	%rd7, %r19, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.u32 	%r20, [%rd8+4];
	and.b32  	%r21, %r20, 1;
	add.s32 	%r22, %r2, %r7;
	add.s32 	%r23, %r22, 1;
	shr.u32 	%r24, %r23, 31;
	add.s32 	%r25, %r23, %r24;
	and.b32  	%r26, %r25, -2;
	sub.s32 	%r27, %r26, %r23;
	add.s32 	%r28, %r15, %r27;
	mul.wide.s32 	%rd9, %r28, 4;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.u32 	%r29, [%rd10];
	and.b32  	%r30, %r29, 8;
	or.b32  	%r31, %r30, %r18;
	shr.u32 	%r32, %r22, 31;
	add.s32 	%r33, %r22, %r32;
	and.b32  	%r34, %r33, -2;
	sub.s32 	%r35, %r22, %r34;
	add.s32 	%r36, %r15, %r35;
	mul.wide.s32 	%rd11, %r36, 4;
	add.s64 	%rd12, %rd3, %rd11;
	ld.global.u32 	%r37, [%rd12];
	and.b32  	%r38, %r37, 2;
	or.b32  	%r39, %r38, %r21;
	shl.b32 	%r40, %r39, 2;
	shr.u32 	%r41, %r31, 2;
	or.b32  	%r42, %r41, %r40;
	mul.wide.s32 	%rd13, %r15, 4;
	add.s64 	%rd14, %rd4, %rd13;
	st.global.u32 	[%rd14], %r42;

$L__BB1_2:
	ret;

}

